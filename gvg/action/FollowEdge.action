# Desired goal

float64   lin_vel   # [m/s]
bool      do_move   # if false, then does not move the robot, but expects the 
                    # robot to be dragged manually on the screen or teleoperated 
---

# Result
uint8 FOUND_MEETPOINT=0
uint8 FOUND_ENDPOINT=1
uint8 FOUND_NO_OBSTACLES=2
uint8 PREEMPTED=3

bool  success                                 
int32 stoppedBecause                         # 0 -- found a meetpoint  
                                             # 1 -- found an endpoint 
					     # 2 -- found no obstacles
					     # 3 -- preempted

gvg/GVGNode   node                     # Valid for cases 0 and 1, the node that caused the follow edge to terminate

---

# Feedback 

laser_node/Obstacle       left              # obstacle on the robot's left
laser_node/Obstacle       right             # obstacle on the robot's right 
float64                  dy                # distance from the equidistant GVG line [in m]
float64                  dtheta_in_rad     # angle error from the equidistant GVG line [in rad] 
geometry_msgs/Point32    midpoint          # midpoint between the left.closest_point and right.closest_point
geometry_msgs/Point32    normal            # the direction of the GVG line 
